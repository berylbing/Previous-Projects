#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="LYCMS")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertStaff(Staff instance);
  partial void UpdateStaff(Staff instance);
  partial void DeleteStaff(Staff instance);
  partial void InsertClient(Client instance);
  partial void UpdateClient(Client instance);
  partial void DeleteClient(Client instance);
  partial void InsertProduct_Import(Product_Import instance);
  partial void UpdateProduct_Import(Product_Import instance);
  partial void DeleteProduct_Import(Product_Import instance);
  partial void InsertProduct_Type_1(Product_Type_1 instance);
  partial void UpdateProduct_Type_1(Product_Type_1 instance);
  partial void DeleteProduct_Type_1(Product_Type_1 instance);
  partial void InsertProduct_Type_2(Product_Type_2 instance);
  partial void UpdateProduct_Type_2(Product_Type_2 instance);
  partial void DeleteProduct_Type_2(Product_Type_2 instance);
  partial void InsertProduct_Type_3(Product_Type_3 instance);
  partial void UpdateProduct_Type_3(Product_Type_3 instance);
  partial void DeleteProduct_Type_3(Product_Type_3 instance);
  partial void InsertState(State instance);
  partial void UpdateState(State instance);
  partial void DeleteState(State instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  partial void InsertState_Order_Form(State_Order_Form instance);
  partial void UpdateState_Order_Form(State_Order_Form instance);
  partial void DeleteState_Order_Form(State_Order_Form instance);
  partial void InsertOrder_Form(Order_Form instance);
  partial void UpdateOrder_Form(Order_Form instance);
  partial void DeleteOrder_Form(Order_Form instance);
  partial void InsertMessage(Message instance);
  partial void UpdateMessage(Message instance);
  partial void DeleteMessage(Message instance);
  partial void InsertOrder_Form_Product(Order_Form_Product instance);
  partial void UpdateOrder_Form_Product(Order_Form_Product instance);
  partial void DeleteOrder_Form_Product(Order_Form_Product instance);
  partial void InsertProduct_Export(Product_Export instance);
  partial void UpdateProduct_Export(Product_Export instance);
  partial void DeleteProduct_Export(Product_Export instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LYCMSConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Staff> Staff
	{
		get
		{
			return this.GetTable<Staff>();
		}
	}
	
	public System.Data.Linq.Table<Client> Client
	{
		get
		{
			return this.GetTable<Client>();
		}
	}
	
	public System.Data.Linq.Table<Product_Import> Product_Import
	{
		get
		{
			return this.GetTable<Product_Import>();
		}
	}
	
	public System.Data.Linq.Table<Product_Type_1> Product_Type_1
	{
		get
		{
			return this.GetTable<Product_Type_1>();
		}
	}
	
	public System.Data.Linq.Table<Product_Type_2> Product_Type_2
	{
		get
		{
			return this.GetTable<Product_Type_2>();
		}
	}
	
	public System.Data.Linq.Table<Product_Type_3> Product_Type_3
	{
		get
		{
			return this.GetTable<Product_Type_3>();
		}
	}
	
	public System.Data.Linq.Table<State> State
	{
		get
		{
			return this.GetTable<State>();
		}
	}
	
	public System.Data.Linq.Table<Product> Product
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
	
	public System.Data.Linq.Table<State_Order_Form> State_Order_Form
	{
		get
		{
			return this.GetTable<State_Order_Form>();
		}
	}
	
	public System.Data.Linq.Table<Order_Form> Order_Form
	{
		get
		{
			return this.GetTable<Order_Form>();
		}
	}
	
	public System.Data.Linq.Table<Message> Message
	{
		get
		{
			return this.GetTable<Message>();
		}
	}
	
	public System.Data.Linq.Table<Order_Form_Product> Order_Form_Product
	{
		get
		{
			return this.GetTable<Order_Form_Product>();
		}
	}
	
	public System.Data.Linq.Table<Product_Export> Product_Export
	{
		get
		{
			return this.GetTable<Product_Export>();
		}
	}
}

[Table(Name="dbo.Staff")]
public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _staff_id;
	
	private string _staff_name;
	
	private string _login_account;
	
	private string _password;
	
	private System.DateTime _arrive_date;
	
	private System.Nullable<System.DateTime> _leave_date;
	
	private string _staff_type;
	
	private EntitySet<Client> _Client;
	
	private EntityRef<Message> _Message;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onstaff_nameChanging(string value);
    partial void Onstaff_nameChanged();
    partial void Onlogin_accountChanging(string value);
    partial void Onlogin_accountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onarrive_dateChanging(System.DateTime value);
    partial void Onarrive_dateChanged();
    partial void Onleave_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onleave_dateChanged();
    partial void Onstaff_typeChanging(string value);
    partial void Onstaff_typeChanged();
    #endregion
	
	public Staff()
	{
		this._Client = new EntitySet<Client>(new Action<Client>(this.attach_Client), new Action<Client>(this.detach_Client));
		this._Message = default(EntityRef<Message>);
		OnCreated();
	}
	
	[Column(Storage="_staff_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int staff_id
	{
		get
		{
			return this._staff_id;
		}
		set
		{
			if ((this._staff_id != value))
			{
				this.Onstaff_idChanging(value);
				this.SendPropertyChanging();
				this._staff_id = value;
				this.SendPropertyChanged("staff_id");
				this.Onstaff_idChanged();
			}
		}
	}
	
	[Column(Storage="_staff_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string staff_name
	{
		get
		{
			return this._staff_name;
		}
		set
		{
			if ((this._staff_name != value))
			{
				this.Onstaff_nameChanging(value);
				this.SendPropertyChanging();
				this._staff_name = value;
				this.SendPropertyChanged("staff_name");
				this.Onstaff_nameChanged();
			}
		}
	}
	
	[Column(Storage="_login_account", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string login_account
	{
		get
		{
			return this._login_account;
		}
		set
		{
			if ((this._login_account != value))
			{
				this.Onlogin_accountChanging(value);
				this.SendPropertyChanging();
				this._login_account = value;
				this.SendPropertyChanged("login_account");
				this.Onlogin_accountChanged();
			}
		}
	}
	
	[Column(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[Column(Storage="_arrive_date", DbType="DateTime NOT NULL")]
	public System.DateTime arrive_date
	{
		get
		{
			return this._arrive_date;
		}
		set
		{
			if ((this._arrive_date != value))
			{
				this.Onarrive_dateChanging(value);
				this.SendPropertyChanging();
				this._arrive_date = value;
				this.SendPropertyChanged("arrive_date");
				this.Onarrive_dateChanged();
			}
		}
	}
	
	[Column(Storage="_leave_date", DbType="DateTime")]
	public System.Nullable<System.DateTime> leave_date
	{
		get
		{
			return this._leave_date;
		}
		set
		{
			if ((this._leave_date != value))
			{
				this.Onleave_dateChanging(value);
				this.SendPropertyChanging();
				this._leave_date = value;
				this.SendPropertyChanged("leave_date");
				this.Onleave_dateChanged();
			}
		}
	}
	
	[Column(Storage="_staff_type", DbType="VarChar(20)")]
	public string staff_type
	{
		get
		{
			return this._staff_type;
		}
		set
		{
			if ((this._staff_type != value))
			{
				this.Onstaff_typeChanging(value);
				this.SendPropertyChanging();
				this._staff_type = value;
				this.SendPropertyChanged("staff_type");
				this.Onstaff_typeChanged();
			}
		}
	}
	
	[Association(Name="Staff_Client", Storage="_Client", ThisKey="staff_id", OtherKey="staff_id")]
	public EntitySet<Client> Client
	{
		get
		{
			return this._Client;
		}
		set
		{
			this._Client.Assign(value);
		}
	}
	
	[Association(Name="Staff_Message", Storage="_Message", ThisKey="staff_id", OtherKey="staff_id", IsUnique=true, IsForeignKey=false)]
	public Message Message
	{
		get
		{
			return this._Message.Entity;
		}
		set
		{
			Message previousValue = this._Message.Entity;
			if (((previousValue != value) 
						|| (this._Message.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Message.Entity = null;
					previousValue.Staff = null;
				}
				this._Message.Entity = value;
				if ((value != null))
				{
					value.Staff = this;
				}
				this.SendPropertyChanged("Message");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Client(Client entity)
	{
		this.SendPropertyChanging();
		entity.Staff = this;
	}
	
	private void detach_Client(Client entity)
	{
		this.SendPropertyChanging();
		entity.Staff = null;
	}
}

[Table(Name="dbo.Client")]
public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _client_id;
	
	private string _client_name;
	
	private string _client_tel;
	
	private string _client_manager_name;
	
	private string _client_address;
	
	private string _client_note;
	
	private System.Nullable<int> _staff_id;
	
	private string _client_products;
	
	private string _client_fax;
	
	private EntitySet<Order_Form> _Order_Form;
	
	private EntityRef<Staff> _Staff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onclient_nameChanging(string value);
    partial void Onclient_nameChanged();
    partial void Onclient_telChanging(string value);
    partial void Onclient_telChanged();
    partial void Onclient_manager_nameChanging(string value);
    partial void Onclient_manager_nameChanged();
    partial void Onclient_addressChanging(string value);
    partial void Onclient_addressChanged();
    partial void Onclient_noteChanging(string value);
    partial void Onclient_noteChanged();
    partial void Onstaff_idChanging(System.Nullable<int> value);
    partial void Onstaff_idChanged();
    partial void Onclient_productsChanging(string value);
    partial void Onclient_productsChanged();
    partial void Onclient_faxChanging(string value);
    partial void Onclient_faxChanged();
    #endregion
	
	public Client()
	{
		this._Order_Form = new EntitySet<Order_Form>(new Action<Order_Form>(this.attach_Order_Form), new Action<Order_Form>(this.detach_Order_Form));
		this._Staff = default(EntityRef<Staff>);
		OnCreated();
	}
	
	[Column(Storage="_client_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int client_id
	{
		get
		{
			return this._client_id;
		}
		set
		{
			if ((this._client_id != value))
			{
				this.Onclient_idChanging(value);
				this.SendPropertyChanging();
				this._client_id = value;
				this.SendPropertyChanged("client_id");
				this.Onclient_idChanged();
			}
		}
	}
	
	[Column(Storage="_client_name", DbType="VarChar(20)")]
	public string client_name
	{
		get
		{
			return this._client_name;
		}
		set
		{
			if ((this._client_name != value))
			{
				this.Onclient_nameChanging(value);
				this.SendPropertyChanging();
				this._client_name = value;
				this.SendPropertyChanged("client_name");
				this.Onclient_nameChanged();
			}
		}
	}
	
	[Column(Storage="_client_tel", DbType="VarChar(20)")]
	public string client_tel
	{
		get
		{
			return this._client_tel;
		}
		set
		{
			if ((this._client_tel != value))
			{
				this.Onclient_telChanging(value);
				this.SendPropertyChanging();
				this._client_tel = value;
				this.SendPropertyChanged("client_tel");
				this.Onclient_telChanged();
			}
		}
	}
	
	[Column(Storage="_client_manager_name", DbType="VarChar(20)")]
	public string client_manager_name
	{
		get
		{
			return this._client_manager_name;
		}
		set
		{
			if ((this._client_manager_name != value))
			{
				this.Onclient_manager_nameChanging(value);
				this.SendPropertyChanging();
				this._client_manager_name = value;
				this.SendPropertyChanged("client_manager_name");
				this.Onclient_manager_nameChanged();
			}
		}
	}
	
	[Column(Storage="_client_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string client_address
	{
		get
		{
			return this._client_address;
		}
		set
		{
			if ((this._client_address != value))
			{
				this.Onclient_addressChanging(value);
				this.SendPropertyChanging();
				this._client_address = value;
				this.SendPropertyChanged("client_address");
				this.Onclient_addressChanged();
			}
		}
	}
	
	[Column(Storage="_client_note", DbType="VarChar(20)")]
	public string client_note
	{
		get
		{
			return this._client_note;
		}
		set
		{
			if ((this._client_note != value))
			{
				this.Onclient_noteChanging(value);
				this.SendPropertyChanging();
				this._client_note = value;
				this.SendPropertyChanged("client_note");
				this.Onclient_noteChanged();
			}
		}
	}
	
	[Column(Storage="_staff_id", DbType="Int")]
	public System.Nullable<int> staff_id
	{
		get
		{
			return this._staff_id;
		}
		set
		{
			if ((this._staff_id != value))
			{
				if (this._Staff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onstaff_idChanging(value);
				this.SendPropertyChanging();
				this._staff_id = value;
				this.SendPropertyChanged("staff_id");
				this.Onstaff_idChanged();
			}
		}
	}
	
	[Column(Storage="_client_products", DbType="VarChar(MAX)")]
	public string client_products
	{
		get
		{
			return this._client_products;
		}
		set
		{
			if ((this._client_products != value))
			{
				this.Onclient_productsChanging(value);
				this.SendPropertyChanging();
				this._client_products = value;
				this.SendPropertyChanged("client_products");
				this.Onclient_productsChanged();
			}
		}
	}
	
	[Column(Storage="_client_fax", DbType="VarChar(50)")]
	public string client_fax
	{
		get
		{
			return this._client_fax;
		}
		set
		{
			if ((this._client_fax != value))
			{
				this.Onclient_faxChanging(value);
				this.SendPropertyChanging();
				this._client_fax = value;
				this.SendPropertyChanged("client_fax");
				this.Onclient_faxChanged();
			}
		}
	}
	
	[Association(Name="Client_Order_Form", Storage="_Order_Form", ThisKey="client_id", OtherKey="client_id")]
	public EntitySet<Order_Form> Order_Form
	{
		get
		{
			return this._Order_Form;
		}
		set
		{
			this._Order_Form.Assign(value);
		}
	}
	
	[Association(Name="Staff_Client", Storage="_Staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
	public Staff Staff
	{
		get
		{
			return this._Staff.Entity;
		}
		set
		{
			Staff previousValue = this._Staff.Entity;
			if (((previousValue != value) 
						|| (this._Staff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Staff.Entity = null;
					previousValue.Client.Remove(this);
				}
				this._Staff.Entity = value;
				if ((value != null))
				{
					value.Client.Add(this);
					this._staff_id = value.staff_id;
				}
				else
				{
					this._staff_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Staff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Order_Form(Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.Client = this;
	}
	
	private void detach_Order_Form(Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.Client = null;
	}
}

[Table(Name="dbo.Product_Import")]
public partial class Product_Import : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.DateTime _import_date;
	
	private string _import_series;
	
	private int _import_package_num;
	
	private int _import_id;
	
	private int _product_id;
	
	private System.Nullable<int> _package_per_num;
	
	private string _import_note;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onimport_dateChanging(System.DateTime value);
    partial void Onimport_dateChanged();
    partial void Onimport_seriesChanging(string value);
    partial void Onimport_seriesChanged();
    partial void Onimport_package_numChanging(int value);
    partial void Onimport_package_numChanged();
    partial void Onimport_idChanging(int value);
    partial void Onimport_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onpackage_per_numChanging(System.Nullable<int> value);
    partial void Onpackage_per_numChanged();
    partial void Onimport_noteChanging(string value);
    partial void Onimport_noteChanged();
    #endregion
	
	public Product_Import()
	{
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[Column(Storage="_import_date", DbType="Date NOT NULL")]
	public System.DateTime import_date
	{
		get
		{
			return this._import_date;
		}
		set
		{
			if ((this._import_date != value))
			{
				this.Onimport_dateChanging(value);
				this.SendPropertyChanging();
				this._import_date = value;
				this.SendPropertyChanged("import_date");
				this.Onimport_dateChanged();
			}
		}
	}
	
	[Column(Storage="_import_series", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string import_series
	{
		get
		{
			return this._import_series;
		}
		set
		{
			if ((this._import_series != value))
			{
				this.Onimport_seriesChanging(value);
				this.SendPropertyChanging();
				this._import_series = value;
				this.SendPropertyChanged("import_series");
				this.Onimport_seriesChanged();
			}
		}
	}
	
	[Column(Storage="_import_package_num", DbType="Int NOT NULL")]
	public int import_package_num
	{
		get
		{
			return this._import_package_num;
		}
		set
		{
			if ((this._import_package_num != value))
			{
				this.Onimport_package_numChanging(value);
				this.SendPropertyChanging();
				this._import_package_num = value;
				this.SendPropertyChanged("import_package_num");
				this.Onimport_package_numChanged();
			}
		}
	}
	
	[Column(Storage="_import_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int import_id
	{
		get
		{
			return this._import_id;
		}
		set
		{
			if ((this._import_id != value))
			{
				this.Onimport_idChanging(value);
				this.SendPropertyChanging();
				this._import_id = value;
				this.SendPropertyChanged("import_id");
				this.Onimport_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_id", DbType="Int NOT NULL")]
	public int product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[Column(Storage="_package_per_num", DbType="Int")]
	public System.Nullable<int> package_per_num
	{
		get
		{
			return this._package_per_num;
		}
		set
		{
			if ((this._package_per_num != value))
			{
				this.Onpackage_per_numChanging(value);
				this.SendPropertyChanging();
				this._package_per_num = value;
				this.SendPropertyChanged("package_per_num");
				this.Onpackage_per_numChanged();
			}
		}
	}
	
	[Column(Storage="_import_note", DbType="VarChar(MAX)")]
	public string import_note
	{
		get
		{
			return this._import_note;
		}
		set
		{
			if ((this._import_note != value))
			{
				this.Onimport_noteChanging(value);
				this.SendPropertyChanging();
				this._import_note = value;
				this.SendPropertyChanged("import_note");
				this.Onimport_noteChanged();
			}
		}
	}
	
	[Association(Name="Product_Product_Import", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Product_Import.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Product_Import.Add(this);
					this._product_id = value.product_id;
				}
				else
				{
					this._product_id = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Product_Type_1")]
public partial class Product_Type_1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _product_type_1_id;
	
	private string _product_type_1_name;
	
	private EntitySet<Product_Type_2> _Product_Type_2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_type_1_idChanging(int value);
    partial void Onproduct_type_1_idChanged();
    partial void Onproduct_type_1_nameChanging(string value);
    partial void Onproduct_type_1_nameChanged();
    #endregion
	
	public Product_Type_1()
	{
		this._Product_Type_2 = new EntitySet<Product_Type_2>(new Action<Product_Type_2>(this.attach_Product_Type_2), new Action<Product_Type_2>(this.detach_Product_Type_2));
		OnCreated();
	}
	
	[Column(Storage="_product_type_1_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int product_type_1_id
	{
		get
		{
			return this._product_type_1_id;
		}
		set
		{
			if ((this._product_type_1_id != value))
			{
				this.Onproduct_type_1_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_1_id = value;
				this.SendPropertyChanged("product_type_1_id");
				this.Onproduct_type_1_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_1_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string product_type_1_name
	{
		get
		{
			return this._product_type_1_name;
		}
		set
		{
			if ((this._product_type_1_name != value))
			{
				this.Onproduct_type_1_nameChanging(value);
				this.SendPropertyChanging();
				this._product_type_1_name = value;
				this.SendPropertyChanged("product_type_1_name");
				this.Onproduct_type_1_nameChanged();
			}
		}
	}
	
	[Association(Name="Product_Type_1_Product_Type_2", Storage="_Product_Type_2", ThisKey="product_type_1_id", OtherKey="product_type_id")]
	public EntitySet<Product_Type_2> Product_Type_2
	{
		get
		{
			return this._Product_Type_2;
		}
		set
		{
			this._Product_Type_2.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_Type_2(Product_Type_2 entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_1 = this;
	}
	
	private void detach_Product_Type_2(Product_Type_2 entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_1 = null;
	}
}

[Table(Name="dbo.Product_Type_2")]
public partial class Product_Type_2 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _product_type_2_id;
	
	private string _product_type_2_name;
	
	private System.Nullable<int> _product_type_id;
	
	private EntitySet<Product_Type_3> _Product_Type_3;
	
	private EntityRef<Product_Type_1> _Product_Type_1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_type_2_idChanging(int value);
    partial void Onproduct_type_2_idChanged();
    partial void Onproduct_type_2_nameChanging(string value);
    partial void Onproduct_type_2_nameChanged();
    partial void Onproduct_type_idChanging(System.Nullable<int> value);
    partial void Onproduct_type_idChanged();
    #endregion
	
	public Product_Type_2()
	{
		this._Product_Type_3 = new EntitySet<Product_Type_3>(new Action<Product_Type_3>(this.attach_Product_Type_3), new Action<Product_Type_3>(this.detach_Product_Type_3));
		this._Product_Type_1 = default(EntityRef<Product_Type_1>);
		OnCreated();
	}
	
	[Column(Storage="_product_type_2_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int product_type_2_id
	{
		get
		{
			return this._product_type_2_id;
		}
		set
		{
			if ((this._product_type_2_id != value))
			{
				this.Onproduct_type_2_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_2_id = value;
				this.SendPropertyChanged("product_type_2_id");
				this.Onproduct_type_2_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_2_name", DbType="VarChar(20)")]
	public string product_type_2_name
	{
		get
		{
			return this._product_type_2_name;
		}
		set
		{
			if ((this._product_type_2_name != value))
			{
				this.Onproduct_type_2_nameChanging(value);
				this.SendPropertyChanging();
				this._product_type_2_name = value;
				this.SendPropertyChanged("product_type_2_name");
				this.Onproduct_type_2_nameChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_id", DbType="Int")]
	public System.Nullable<int> product_type_id
	{
		get
		{
			return this._product_type_id;
		}
		set
		{
			if ((this._product_type_id != value))
			{
				if (this._Product_Type_1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_type_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_id = value;
				this.SendPropertyChanged("product_type_id");
				this.Onproduct_type_idChanged();
			}
		}
	}
	
	[Association(Name="Product_Type_2_Product_Type_3", Storage="_Product_Type_3", ThisKey="product_type_2_id", OtherKey="product_type_id")]
	public EntitySet<Product_Type_3> Product_Type_3
	{
		get
		{
			return this._Product_Type_3;
		}
		set
		{
			this._Product_Type_3.Assign(value);
		}
	}
	
	[Association(Name="Product_Type_1_Product_Type_2", Storage="_Product_Type_1", ThisKey="product_type_id", OtherKey="product_type_1_id", IsForeignKey=true)]
	public Product_Type_1 Product_Type_1
	{
		get
		{
			return this._Product_Type_1.Entity;
		}
		set
		{
			Product_Type_1 previousValue = this._Product_Type_1.Entity;
			if (((previousValue != value) 
						|| (this._Product_Type_1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product_Type_1.Entity = null;
					previousValue.Product_Type_2.Remove(this);
				}
				this._Product_Type_1.Entity = value;
				if ((value != null))
				{
					value.Product_Type_2.Add(this);
					this._product_type_id = value.product_type_1_id;
				}
				else
				{
					this._product_type_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product_Type_1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_Type_3(Product_Type_3 entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_2 = this;
	}
	
	private void detach_Product_Type_3(Product_Type_3 entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_2 = null;
	}
}

[Table(Name="dbo.Product_Type_3")]
public partial class Product_Type_3 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _product_type_3_id;
	
	private string _product_type_3_name;
	
	private System.Nullable<int> _product_type_id;
	
	private EntitySet<Product> _Product;
	
	private EntityRef<Product_Type_2> _Product_Type_2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_type_3_idChanging(int value);
    partial void Onproduct_type_3_idChanged();
    partial void Onproduct_type_3_nameChanging(string value);
    partial void Onproduct_type_3_nameChanged();
    partial void Onproduct_type_idChanging(System.Nullable<int> value);
    partial void Onproduct_type_idChanged();
    #endregion
	
	public Product_Type_3()
	{
		this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
		this._Product_Type_2 = default(EntityRef<Product_Type_2>);
		OnCreated();
	}
	
	[Column(Storage="_product_type_3_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int product_type_3_id
	{
		get
		{
			return this._product_type_3_id;
		}
		set
		{
			if ((this._product_type_3_id != value))
			{
				this.Onproduct_type_3_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_3_id = value;
				this.SendPropertyChanged("product_type_3_id");
				this.Onproduct_type_3_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_3_name", DbType="VarChar(50)")]
	public string product_type_3_name
	{
		get
		{
			return this._product_type_3_name;
		}
		set
		{
			if ((this._product_type_3_name != value))
			{
				this.Onproduct_type_3_nameChanging(value);
				this.SendPropertyChanging();
				this._product_type_3_name = value;
				this.SendPropertyChanged("product_type_3_name");
				this.Onproduct_type_3_nameChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_id", DbType="Int")]
	public System.Nullable<int> product_type_id
	{
		get
		{
			return this._product_type_id;
		}
		set
		{
			if ((this._product_type_id != value))
			{
				if (this._Product_Type_2.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_type_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_id = value;
				this.SendPropertyChanged("product_type_id");
				this.Onproduct_type_idChanged();
			}
		}
	}
	
	[Association(Name="Product_Type_3_Product", Storage="_Product", ThisKey="product_type_3_id", OtherKey="product_type_id")]
	public EntitySet<Product> Product
	{
		get
		{
			return this._Product;
		}
		set
		{
			this._Product.Assign(value);
		}
	}
	
	[Association(Name="Product_Type_2_Product_Type_3", Storage="_Product_Type_2", ThisKey="product_type_id", OtherKey="product_type_2_id", IsForeignKey=true)]
	public Product_Type_2 Product_Type_2
	{
		get
		{
			return this._Product_Type_2.Entity;
		}
		set
		{
			Product_Type_2 previousValue = this._Product_Type_2.Entity;
			if (((previousValue != value) 
						|| (this._Product_Type_2.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product_Type_2.Entity = null;
					previousValue.Product_Type_3.Remove(this);
				}
				this._Product_Type_2.Entity = value;
				if ((value != null))
				{
					value.Product_Type_3.Add(this);
					this._product_type_id = value.product_type_2_id;
				}
				else
				{
					this._product_type_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Product_Type_2");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_3 = this;
	}
	
	private void detach_Product(Product entity)
	{
		this.SendPropertyChanging();
		entity.Product_Type_3 = null;
	}
}

[Table(Name="dbo.State")]
public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _state_id;
	
	private string _state_name;
	
	private string _state_desc;
	
	private EntitySet<State_Order_Form> _State_Order_Form;
	
	private EntitySet<Order_Form> _Order_Form;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    partial void Onstate_descChanging(string value);
    partial void Onstate_descChanged();
    #endregion
	
	public State()
	{
		this._State_Order_Form = new EntitySet<State_Order_Form>(new Action<State_Order_Form>(this.attach_State_Order_Form), new Action<State_Order_Form>(this.detach_State_Order_Form));
		this._Order_Form = new EntitySet<Order_Form>(new Action<Order_Form>(this.attach_Order_Form), new Action<Order_Form>(this.detach_Order_Form));
		OnCreated();
	}
	
	[Column(Storage="_state_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int state_id
	{
		get
		{
			return this._state_id;
		}
		set
		{
			if ((this._state_id != value))
			{
				this.Onstate_idChanging(value);
				this.SendPropertyChanging();
				this._state_id = value;
				this.SendPropertyChanged("state_id");
				this.Onstate_idChanged();
			}
		}
	}
	
	[Column(Storage="_state_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string state_name
	{
		get
		{
			return this._state_name;
		}
		set
		{
			if ((this._state_name != value))
			{
				this.Onstate_nameChanging(value);
				this.SendPropertyChanging();
				this._state_name = value;
				this.SendPropertyChanged("state_name");
				this.Onstate_nameChanged();
			}
		}
	}
	
	[Column(Storage="_state_desc", DbType="VarChar(20)")]
	public string state_desc
	{
		get
		{
			return this._state_desc;
		}
		set
		{
			if ((this._state_desc != value))
			{
				this.Onstate_descChanging(value);
				this.SendPropertyChanging();
				this._state_desc = value;
				this.SendPropertyChanged("state_desc");
				this.Onstate_descChanged();
			}
		}
	}
	
	[Association(Name="State_State_Order_Form", Storage="_State_Order_Form", ThisKey="state_id", OtherKey="state_id")]
	public EntitySet<State_Order_Form> State_Order_Form
	{
		get
		{
			return this._State_Order_Form;
		}
		set
		{
			this._State_Order_Form.Assign(value);
		}
	}
	
	[Association(Name="State_Order_Form", Storage="_Order_Form", ThisKey="state_id", OtherKey="current_state_id")]
	public EntitySet<Order_Form> Order_Form
	{
		get
		{
			return this._Order_Form;
		}
		set
		{
			this._Order_Form.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_State_Order_Form(State_Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.State = this;
	}
	
	private void detach_State_Order_Form(State_Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.State = null;
	}
	
	private void attach_Order_Form(Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.State = this;
	}
	
	private void detach_Order_Form(Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.State = null;
	}
}

[Table(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _product_id;
	
	private int _product_type_id;
	
	private string _product_standars;
	
	private int _real_storage;
	
	private string _product_serial_num;
	
	private System.Nullable<int> _up_limit;
	
	private string _product_detail;
	
	private System.Nullable<int> _down_limit;
	
	private string _product_unit;
	
	private string _product_name;
	
	private EntitySet<Product_Import> _Product_Import;
	
	private EntitySet<Order_Form_Product> _Order_Form_Product;
	
	private EntityRef<Product_Type_3> _Product_Type_3;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_type_idChanging(int value);
    partial void Onproduct_type_idChanged();
    partial void Onproduct_standarsChanging(string value);
    partial void Onproduct_standarsChanged();
    partial void Onreal_storageChanging(int value);
    partial void Onreal_storageChanged();
    partial void Onproduct_serial_numChanging(string value);
    partial void Onproduct_serial_numChanged();
    partial void Onup_limitChanging(System.Nullable<int> value);
    partial void Onup_limitChanged();
    partial void Onproduct_detailChanging(string value);
    partial void Onproduct_detailChanged();
    partial void Ondown_limitChanging(System.Nullable<int> value);
    partial void Ondown_limitChanged();
    partial void Onproduct_unitChanging(string value);
    partial void Onproduct_unitChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    #endregion
	
	public Product()
	{
		this._Product_Import = new EntitySet<Product_Import>(new Action<Product_Import>(this.attach_Product_Import), new Action<Product_Import>(this.detach_Product_Import));
		this._Order_Form_Product = new EntitySet<Order_Form_Product>(new Action<Order_Form_Product>(this.attach_Order_Form_Product), new Action<Order_Form_Product>(this.detach_Order_Form_Product));
		this._Product_Type_3 = default(EntityRef<Product_Type_3>);
		OnCreated();
	}
	
	[Column(Storage="_product_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_type_id", DbType="Int NOT NULL")]
	public int product_type_id
	{
		get
		{
			return this._product_type_id;
		}
		set
		{
			if ((this._product_type_id != value))
			{
				if (this._Product_Type_3.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_type_idChanging(value);
				this.SendPropertyChanging();
				this._product_type_id = value;
				this.SendPropertyChanged("product_type_id");
				this.Onproduct_type_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_standars", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string product_standars
	{
		get
		{
			return this._product_standars;
		}
		set
		{
			if ((this._product_standars != value))
			{
				this.Onproduct_standarsChanging(value);
				this.SendPropertyChanging();
				this._product_standars = value;
				this.SendPropertyChanged("product_standars");
				this.Onproduct_standarsChanged();
			}
		}
	}
	
	[Column(Storage="_real_storage", DbType="Int NOT NULL")]
	public int real_storage
	{
		get
		{
			return this._real_storage;
		}
		set
		{
			if ((this._real_storage != value))
			{
				this.Onreal_storageChanging(value);
				this.SendPropertyChanging();
				this._real_storage = value;
				this.SendPropertyChanged("real_storage");
				this.Onreal_storageChanged();
			}
		}
	}
	
	[Column(Storage="_product_serial_num", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string product_serial_num
	{
		get
		{
			return this._product_serial_num;
		}
		set
		{
			if ((this._product_serial_num != value))
			{
				this.Onproduct_serial_numChanging(value);
				this.SendPropertyChanging();
				this._product_serial_num = value;
				this.SendPropertyChanged("product_serial_num");
				this.Onproduct_serial_numChanged();
			}
		}
	}
	
	[Column(Storage="_up_limit", DbType="Int")]
	public System.Nullable<int> up_limit
	{
		get
		{
			return this._up_limit;
		}
		set
		{
			if ((this._up_limit != value))
			{
				this.Onup_limitChanging(value);
				this.SendPropertyChanging();
				this._up_limit = value;
				this.SendPropertyChanged("up_limit");
				this.Onup_limitChanged();
			}
		}
	}
	
	[Column(Storage="_product_detail", DbType="VarChar(MAX)")]
	public string product_detail
	{
		get
		{
			return this._product_detail;
		}
		set
		{
			if ((this._product_detail != value))
			{
				this.Onproduct_detailChanging(value);
				this.SendPropertyChanging();
				this._product_detail = value;
				this.SendPropertyChanged("product_detail");
				this.Onproduct_detailChanged();
			}
		}
	}
	
	[Column(Storage="_down_limit", DbType="Int")]
	public System.Nullable<int> down_limit
	{
		get
		{
			return this._down_limit;
		}
		set
		{
			if ((this._down_limit != value))
			{
				this.Ondown_limitChanging(value);
				this.SendPropertyChanging();
				this._down_limit = value;
				this.SendPropertyChanged("down_limit");
				this.Ondown_limitChanged();
			}
		}
	}
	
	[Column(Storage="_product_unit", DbType="VarChar(20)")]
	public string product_unit
	{
		get
		{
			return this._product_unit;
		}
		set
		{
			if ((this._product_unit != value))
			{
				this.Onproduct_unitChanging(value);
				this.SendPropertyChanging();
				this._product_unit = value;
				this.SendPropertyChanged("product_unit");
				this.Onproduct_unitChanged();
			}
		}
	}
	
	[Column(Storage="_product_name", DbType="VarChar(20)")]
	public string product_name
	{
		get
		{
			return this._product_name;
		}
		set
		{
			if ((this._product_name != value))
			{
				this.Onproduct_nameChanging(value);
				this.SendPropertyChanging();
				this._product_name = value;
				this.SendPropertyChanged("product_name");
				this.Onproduct_nameChanged();
			}
		}
	}
	
	[Association(Name="Product_Product_Import", Storage="_Product_Import", ThisKey="product_id", OtherKey="product_id")]
	public EntitySet<Product_Import> Product_Import
	{
		get
		{
			return this._Product_Import;
		}
		set
		{
			this._Product_Import.Assign(value);
		}
	}
	
	[Association(Name="Product_Order_Form_Product", Storage="_Order_Form_Product", ThisKey="product_id", OtherKey="product_id")]
	public EntitySet<Order_Form_Product> Order_Form_Product
	{
		get
		{
			return this._Order_Form_Product;
		}
		set
		{
			this._Order_Form_Product.Assign(value);
		}
	}
	
	[Association(Name="Product_Type_3_Product", Storage="_Product_Type_3", ThisKey="product_type_id", OtherKey="product_type_3_id", IsForeignKey=true)]
	public Product_Type_3 Product_Type_3
	{
		get
		{
			return this._Product_Type_3.Entity;
		}
		set
		{
			Product_Type_3 previousValue = this._Product_Type_3.Entity;
			if (((previousValue != value) 
						|| (this._Product_Type_3.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product_Type_3.Entity = null;
					previousValue.Product.Remove(this);
				}
				this._Product_Type_3.Entity = value;
				if ((value != null))
				{
					value.Product.Add(this);
					this._product_type_id = value.product_type_3_id;
				}
				else
				{
					this._product_type_id = default(int);
				}
				this.SendPropertyChanged("Product_Type_3");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_Import(Product_Import entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Product_Import(Product_Import entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
	
	private void attach_Order_Form_Product(Order_Form_Product entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_Order_Form_Product(Order_Form_Product entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}

[Table(Name="dbo.State_Order_Form")]
public partial class State_Order_Form : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _state_id;
	
	private string _orderform_id;
	
	private string _modify_person;
	
	private System.DateTime _modify_date;
	
	private int _stateorderform_id;
	
	private EntityRef<State> _State;
	
	private EntityRef<Order_Form> _Order_Form;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstate_idChanging(int value);
    partial void Onstate_idChanged();
    partial void Onorderform_idChanging(string value);
    partial void Onorderform_idChanged();
    partial void Onmodify_personChanging(string value);
    partial void Onmodify_personChanged();
    partial void Onmodify_dateChanging(System.DateTime value);
    partial void Onmodify_dateChanged();
    partial void Onstateorderform_idChanging(int value);
    partial void Onstateorderform_idChanged();
    #endregion
	
	public State_Order_Form()
	{
		this._State = default(EntityRef<State>);
		this._Order_Form = default(EntityRef<Order_Form>);
		OnCreated();
	}
	
	[Column(Storage="_state_id", DbType="Int NOT NULL")]
	public int state_id
	{
		get
		{
			return this._state_id;
		}
		set
		{
			if ((this._state_id != value))
			{
				if (this._State.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onstate_idChanging(value);
				this.SendPropertyChanging();
				this._state_id = value;
				this.SendPropertyChanged("state_id");
				this.Onstate_idChanged();
			}
		}
	}
	
	[Column(Storage="_orderform_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string orderform_id
	{
		get
		{
			return this._orderform_id;
		}
		set
		{
			if ((this._orderform_id != value))
			{
				if (this._Order_Form.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onorderform_idChanging(value);
				this.SendPropertyChanging();
				this._orderform_id = value;
				this.SendPropertyChanged("orderform_id");
				this.Onorderform_idChanged();
			}
		}
	}
	
	[Column(Storage="_modify_person", DbType="VarChar(20)")]
	public string modify_person
	{
		get
		{
			return this._modify_person;
		}
		set
		{
			if ((this._modify_person != value))
			{
				this.Onmodify_personChanging(value);
				this.SendPropertyChanging();
				this._modify_person = value;
				this.SendPropertyChanged("modify_person");
				this.Onmodify_personChanged();
			}
		}
	}
	
	[Column(Storage="_modify_date", DbType="DateTime NOT NULL")]
	public System.DateTime modify_date
	{
		get
		{
			return this._modify_date;
		}
		set
		{
			if ((this._modify_date != value))
			{
				this.Onmodify_dateChanging(value);
				this.SendPropertyChanging();
				this._modify_date = value;
				this.SendPropertyChanged("modify_date");
				this.Onmodify_dateChanged();
			}
		}
	}
	
	[Column(Storage="_stateorderform_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int stateorderform_id
	{
		get
		{
			return this._stateorderform_id;
		}
		set
		{
			if ((this._stateorderform_id != value))
			{
				this.Onstateorderform_idChanging(value);
				this.SendPropertyChanging();
				this._stateorderform_id = value;
				this.SendPropertyChanged("stateorderform_id");
				this.Onstateorderform_idChanged();
			}
		}
	}
	
	[Association(Name="State_State_Order_Form", Storage="_State", ThisKey="state_id", OtherKey="state_id", IsForeignKey=true)]
	public State State
	{
		get
		{
			return this._State.Entity;
		}
		set
		{
			State previousValue = this._State.Entity;
			if (((previousValue != value) 
						|| (this._State.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._State.Entity = null;
					previousValue.State_Order_Form.Remove(this);
				}
				this._State.Entity = value;
				if ((value != null))
				{
					value.State_Order_Form.Add(this);
					this._state_id = value.state_id;
				}
				else
				{
					this._state_id = default(int);
				}
				this.SendPropertyChanged("State");
			}
		}
	}
	
	[Association(Name="Order_Form_State_Order_Form", Storage="_Order_Form", ThisKey="orderform_id", OtherKey="orderform_id", IsForeignKey=true)]
	public Order_Form Order_Form
	{
		get
		{
			return this._Order_Form.Entity;
		}
		set
		{
			Order_Form previousValue = this._Order_Form.Entity;
			if (((previousValue != value) 
						|| (this._Order_Form.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_Form.Entity = null;
					previousValue.State_Order_Form.Remove(this);
				}
				this._Order_Form.Entity = value;
				if ((value != null))
				{
					value.State_Order_Form.Add(this);
					this._orderform_id = value.orderform_id;
				}
				else
				{
					this._orderform_id = default(string);
				}
				this.SendPropertyChanged("Order_Form");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Order_Form")]
public partial class Order_Form : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _orderform_id;
	
	private System.DateTime _order_date;
	
	private int _client_id;
	
	private System.Nullable<int> _current_state_id;
	
	private System.Nullable<int> _priority;
	
	private EntitySet<State_Order_Form> _State_Order_Form;
	
	private EntitySet<Order_Form_Product> _Order_Form_Product;
	
	private EntityRef<Client> _Client;
	
	private EntityRef<State> _State;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorderform_idChanging(string value);
    partial void Onorderform_idChanged();
    partial void Onorder_dateChanging(System.DateTime value);
    partial void Onorder_dateChanged();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Oncurrent_state_idChanging(System.Nullable<int> value);
    partial void Oncurrent_state_idChanged();
    partial void OnpriorityChanging(System.Nullable<int> value);
    partial void OnpriorityChanged();
    #endregion
	
	public Order_Form()
	{
		this._State_Order_Form = new EntitySet<State_Order_Form>(new Action<State_Order_Form>(this.attach_State_Order_Form), new Action<State_Order_Form>(this.detach_State_Order_Form));
		this._Order_Form_Product = new EntitySet<Order_Form_Product>(new Action<Order_Form_Product>(this.attach_Order_Form_Product), new Action<Order_Form_Product>(this.detach_Order_Form_Product));
		this._Client = default(EntityRef<Client>);
		this._State = default(EntityRef<State>);
		OnCreated();
	}
	
	[Column(Storage="_orderform_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string orderform_id
	{
		get
		{
			return this._orderform_id;
		}
		set
		{
			if ((this._orderform_id != value))
			{
				this.Onorderform_idChanging(value);
				this.SendPropertyChanging();
				this._orderform_id = value;
				this.SendPropertyChanged("orderform_id");
				this.Onorderform_idChanged();
			}
		}
	}
	
	[Column(Storage="_order_date", DbType="Date NOT NULL")]
	public System.DateTime order_date
	{
		get
		{
			return this._order_date;
		}
		set
		{
			if ((this._order_date != value))
			{
				this.Onorder_dateChanging(value);
				this.SendPropertyChanging();
				this._order_date = value;
				this.SendPropertyChanged("order_date");
				this.Onorder_dateChanged();
			}
		}
	}
	
	[Column(Storage="_client_id", DbType="Int NOT NULL")]
	public int client_id
	{
		get
		{
			return this._client_id;
		}
		set
		{
			if ((this._client_id != value))
			{
				if (this._Client.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onclient_idChanging(value);
				this.SendPropertyChanging();
				this._client_id = value;
				this.SendPropertyChanged("client_id");
				this.Onclient_idChanged();
			}
		}
	}
	
	[Column(Storage="_current_state_id", DbType="Int")]
	public System.Nullable<int> current_state_id
	{
		get
		{
			return this._current_state_id;
		}
		set
		{
			if ((this._current_state_id != value))
			{
				if (this._State.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Oncurrent_state_idChanging(value);
				this.SendPropertyChanging();
				this._current_state_id = value;
				this.SendPropertyChanged("current_state_id");
				this.Oncurrent_state_idChanged();
			}
		}
	}
	
	[Column(Storage="_priority", DbType="Int")]
	public System.Nullable<int> priority
	{
		get
		{
			return this._priority;
		}
		set
		{
			if ((this._priority != value))
			{
				this.OnpriorityChanging(value);
				this.SendPropertyChanging();
				this._priority = value;
				this.SendPropertyChanged("priority");
				this.OnpriorityChanged();
			}
		}
	}
	
	[Association(Name="Order_Form_State_Order_Form", Storage="_State_Order_Form", ThisKey="orderform_id", OtherKey="orderform_id")]
	public EntitySet<State_Order_Form> State_Order_Form
	{
		get
		{
			return this._State_Order_Form;
		}
		set
		{
			this._State_Order_Form.Assign(value);
		}
	}
	
	[Association(Name="Order_Form_Order_Form_Product", Storage="_Order_Form_Product", ThisKey="orderform_id", OtherKey="orderform_id")]
	public EntitySet<Order_Form_Product> Order_Form_Product
	{
		get
		{
			return this._Order_Form_Product;
		}
		set
		{
			this._Order_Form_Product.Assign(value);
		}
	}
	
	[Association(Name="Client_Order_Form", Storage="_Client", ThisKey="client_id", OtherKey="client_id", IsForeignKey=true)]
	public Client Client
	{
		get
		{
			return this._Client.Entity;
		}
		set
		{
			Client previousValue = this._Client.Entity;
			if (((previousValue != value) 
						|| (this._Client.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Client.Entity = null;
					previousValue.Order_Form.Remove(this);
				}
				this._Client.Entity = value;
				if ((value != null))
				{
					value.Order_Form.Add(this);
					this._client_id = value.client_id;
				}
				else
				{
					this._client_id = default(int);
				}
				this.SendPropertyChanged("Client");
			}
		}
	}
	
	[Association(Name="State_Order_Form", Storage="_State", ThisKey="current_state_id", OtherKey="state_id", IsForeignKey=true)]
	public State State
	{
		get
		{
			return this._State.Entity;
		}
		set
		{
			State previousValue = this._State.Entity;
			if (((previousValue != value) 
						|| (this._State.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._State.Entity = null;
					previousValue.Order_Form.Remove(this);
				}
				this._State.Entity = value;
				if ((value != null))
				{
					value.Order_Form.Add(this);
					this._current_state_id = value.state_id;
				}
				else
				{
					this._current_state_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("State");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_State_Order_Form(State_Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form = this;
	}
	
	private void detach_State_Order_Form(State_Order_Form entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form = null;
	}
	
	private void attach_Order_Form_Product(Order_Form_Product entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form = this;
	}
	
	private void detach_Order_Form_Product(Order_Form_Product entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form = null;
	}
}

[Table(Name="dbo.Message")]
public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _staff_id;
	
	private System.Nullable<int> _mes_back_num;
	
	private System.Nullable<int> _mes_sure_num;
	
	private System.Nullable<int> _mes_export_num;
	
	private System.Nullable<int> _mes_wait_num;
	
	private EntityRef<Staff> _Staff;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onmes_back_numChanging(System.Nullable<int> value);
    partial void Onmes_back_numChanged();
    partial void Onmes_sure_numChanging(System.Nullable<int> value);
    partial void Onmes_sure_numChanged();
    partial void Onmes_export_numChanging(System.Nullable<int> value);
    partial void Onmes_export_numChanged();
    partial void Onmes_wait_numChanging(System.Nullable<int> value);
    partial void Onmes_wait_numChanged();
    #endregion
	
	public Message()
	{
		this._Staff = default(EntityRef<Staff>);
		OnCreated();
	}
	
	[Column(Storage="_staff_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int staff_id
	{
		get
		{
			return this._staff_id;
		}
		set
		{
			if ((this._staff_id != value))
			{
				if (this._Staff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onstaff_idChanging(value);
				this.SendPropertyChanging();
				this._staff_id = value;
				this.SendPropertyChanged("staff_id");
				this.Onstaff_idChanged();
			}
		}
	}
	
	[Column(Storage="_mes_back_num", DbType="Int")]
	public System.Nullable<int> mes_back_num
	{
		get
		{
			return this._mes_back_num;
		}
		set
		{
			if ((this._mes_back_num != value))
			{
				this.Onmes_back_numChanging(value);
				this.SendPropertyChanging();
				this._mes_back_num = value;
				this.SendPropertyChanged("mes_back_num");
				this.Onmes_back_numChanged();
			}
		}
	}
	
	[Column(Storage="_mes_sure_num", DbType="Int")]
	public System.Nullable<int> mes_sure_num
	{
		get
		{
			return this._mes_sure_num;
		}
		set
		{
			if ((this._mes_sure_num != value))
			{
				this.Onmes_sure_numChanging(value);
				this.SendPropertyChanging();
				this._mes_sure_num = value;
				this.SendPropertyChanged("mes_sure_num");
				this.Onmes_sure_numChanged();
			}
		}
	}
	
	[Column(Storage="_mes_export_num", DbType="Int")]
	public System.Nullable<int> mes_export_num
	{
		get
		{
			return this._mes_export_num;
		}
		set
		{
			if ((this._mes_export_num != value))
			{
				this.Onmes_export_numChanging(value);
				this.SendPropertyChanging();
				this._mes_export_num = value;
				this.SendPropertyChanged("mes_export_num");
				this.Onmes_export_numChanged();
			}
		}
	}
	
	[Column(Storage="_mes_wait_num", DbType="Int")]
	public System.Nullable<int> mes_wait_num
	{
		get
		{
			return this._mes_wait_num;
		}
		set
		{
			if ((this._mes_wait_num != value))
			{
				this.Onmes_wait_numChanging(value);
				this.SendPropertyChanging();
				this._mes_wait_num = value;
				this.SendPropertyChanged("mes_wait_num");
				this.Onmes_wait_numChanged();
			}
		}
	}
	
	[Association(Name="Staff_Message", Storage="_Staff", ThisKey="staff_id", OtherKey="staff_id", IsForeignKey=true)]
	public Staff Staff
	{
		get
		{
			return this._Staff.Entity;
		}
		set
		{
			Staff previousValue = this._Staff.Entity;
			if (((previousValue != value) 
						|| (this._Staff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Staff.Entity = null;
					previousValue.Message = null;
				}
				this._Staff.Entity = value;
				if ((value != null))
				{
					value.Message = this;
					this._staff_id = value.staff_id;
				}
				else
				{
					this._staff_id = default(int);
				}
				this.SendPropertyChanged("Staff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.Order_Form_Product")]
public partial class Order_Form_Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _orderform_id;
	
	private int _product_id;
	
	private System.Nullable<int> _order_num;
	
	private System.Nullable<System.DateTime> _send_date;
	
	private System.Nullable<double> _finish_rate;
	
	private int _orderformproduct_id;
	
	private System.Nullable<int> _rest_num;
	
	private EntitySet<Product_Export> _Product_Export;
	
	private EntityRef<Order_Form> _Order_Form;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorderform_idChanging(string value);
    partial void Onorderform_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onorder_numChanging(System.Nullable<int> value);
    partial void Onorder_numChanged();
    partial void Onsend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onsend_dateChanged();
    partial void Onfinish_rateChanging(System.Nullable<double> value);
    partial void Onfinish_rateChanged();
    partial void Onorderformproduct_idChanging(int value);
    partial void Onorderformproduct_idChanged();
    partial void Onrest_numChanging(System.Nullable<int> value);
    partial void Onrest_numChanged();
    #endregion
	
	public Order_Form_Product()
	{
		this._Product_Export = new EntitySet<Product_Export>(new Action<Product_Export>(this.attach_Product_Export), new Action<Product_Export>(this.detach_Product_Export));
		this._Order_Form = default(EntityRef<Order_Form>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[Column(Storage="_orderform_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string orderform_id
	{
		get
		{
			return this._orderform_id;
		}
		set
		{
			if ((this._orderform_id != value))
			{
				if (this._Order_Form.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onorderform_idChanging(value);
				this.SendPropertyChanging();
				this._orderform_id = value;
				this.SendPropertyChanged("orderform_id");
				this.Onorderform_idChanged();
			}
		}
	}
	
	[Column(Storage="_product_id", DbType="Int NOT NULL")]
	public int product_id
	{
		get
		{
			return this._product_id;
		}
		set
		{
			if ((this._product_id != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproduct_idChanging(value);
				this.SendPropertyChanging();
				this._product_id = value;
				this.SendPropertyChanged("product_id");
				this.Onproduct_idChanged();
			}
		}
	}
	
	[Column(Storage="_order_num", DbType="Int")]
	public System.Nullable<int> order_num
	{
		get
		{
			return this._order_num;
		}
		set
		{
			if ((this._order_num != value))
			{
				this.Onorder_numChanging(value);
				this.SendPropertyChanging();
				this._order_num = value;
				this.SendPropertyChanged("order_num");
				this.Onorder_numChanged();
			}
		}
	}
	
	[Column(Storage="_send_date", DbType="Date")]
	public System.Nullable<System.DateTime> send_date
	{
		get
		{
			return this._send_date;
		}
		set
		{
			if ((this._send_date != value))
			{
				this.Onsend_dateChanging(value);
				this.SendPropertyChanging();
				this._send_date = value;
				this.SendPropertyChanged("send_date");
				this.Onsend_dateChanged();
			}
		}
	}
	
	[Column(Storage="_finish_rate", DbType="Float")]
	public System.Nullable<double> finish_rate
	{
		get
		{
			return this._finish_rate;
		}
		set
		{
			if ((this._finish_rate != value))
			{
				this.Onfinish_rateChanging(value);
				this.SendPropertyChanging();
				this._finish_rate = value;
				this.SendPropertyChanged("finish_rate");
				this.Onfinish_rateChanged();
			}
		}
	}
	
	[Column(Storage="_orderformproduct_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int orderformproduct_id
	{
		get
		{
			return this._orderformproduct_id;
		}
		set
		{
			if ((this._orderformproduct_id != value))
			{
				this.Onorderformproduct_idChanging(value);
				this.SendPropertyChanging();
				this._orderformproduct_id = value;
				this.SendPropertyChanged("orderformproduct_id");
				this.Onorderformproduct_idChanged();
			}
		}
	}
	
	[Column(Storage="_rest_num", DbType="Int")]
	public System.Nullable<int> rest_num
	{
		get
		{
			return this._rest_num;
		}
		set
		{
			if ((this._rest_num != value))
			{
				this.Onrest_numChanging(value);
				this.SendPropertyChanging();
				this._rest_num = value;
				this.SendPropertyChanged("rest_num");
				this.Onrest_numChanged();
			}
		}
	}
	
	[Association(Name="Order_Form_Product_Product_Export", Storage="_Product_Export", ThisKey="orderformproduct_id", OtherKey="orderformproduct_id")]
	public EntitySet<Product_Export> Product_Export
	{
		get
		{
			return this._Product_Export;
		}
		set
		{
			this._Product_Export.Assign(value);
		}
	}
	
	[Association(Name="Order_Form_Order_Form_Product", Storage="_Order_Form", ThisKey="orderform_id", OtherKey="orderform_id", IsForeignKey=true)]
	public Order_Form Order_Form
	{
		get
		{
			return this._Order_Form.Entity;
		}
		set
		{
			Order_Form previousValue = this._Order_Form.Entity;
			if (((previousValue != value) 
						|| (this._Order_Form.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_Form.Entity = null;
					previousValue.Order_Form_Product.Remove(this);
				}
				this._Order_Form.Entity = value;
				if ((value != null))
				{
					value.Order_Form_Product.Add(this);
					this._orderform_id = value.orderform_id;
				}
				else
				{
					this._orderform_id = default(string);
				}
				this.SendPropertyChanged("Order_Form");
			}
		}
	}
	
	[Association(Name="Product_Order_Form_Product", Storage="_Product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.Order_Form_Product.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.Order_Form_Product.Add(this);
					this._product_id = value.product_id;
				}
				else
				{
					this._product_id = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Product_Export(Product_Export entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form_Product = this;
	}
	
	private void detach_Product_Export(Product_Export entity)
	{
		this.SendPropertyChanging();
		entity.Order_Form_Product = null;
	}
}

[Table(Name="dbo.Product_Export")]
public partial class Product_Export : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _export_num;
	
	private System.DateTime _export_date;
	
	private int _export_id;
	
	private string _export_series;
	
	private string _export_property;
	
	private string _export_level;
	
	private string _export_note;
	
	private string _export_partnum;
	
	private System.Nullable<int> _orderformproduct_id;
	
	private EntityRef<Order_Form_Product> _Order_Form_Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onexport_numChanging(int value);
    partial void Onexport_numChanged();
    partial void Onexport_dateChanging(System.DateTime value);
    partial void Onexport_dateChanged();
    partial void Onexport_idChanging(int value);
    partial void Onexport_idChanged();
    partial void Onexport_seriesChanging(string value);
    partial void Onexport_seriesChanged();
    partial void Onexport_propertyChanging(string value);
    partial void Onexport_propertyChanged();
    partial void Onexport_levelChanging(string value);
    partial void Onexport_levelChanged();
    partial void Onexport_noteChanging(string value);
    partial void Onexport_noteChanged();
    partial void Onexport_partnumChanging(string value);
    partial void Onexport_partnumChanged();
    partial void Onorderformproduct_idChanging(System.Nullable<int> value);
    partial void Onorderformproduct_idChanged();
    #endregion
	
	public Product_Export()
	{
		this._Order_Form_Product = default(EntityRef<Order_Form_Product>);
		OnCreated();
	}
	
	[Column(Storage="_export_num", DbType="Int NOT NULL")]
	public int export_num
	{
		get
		{
			return this._export_num;
		}
		set
		{
			if ((this._export_num != value))
			{
				this.Onexport_numChanging(value);
				this.SendPropertyChanging();
				this._export_num = value;
				this.SendPropertyChanged("export_num");
				this.Onexport_numChanged();
			}
		}
	}
	
	[Column(Storage="_export_date", DbType="DateTime NOT NULL")]
	public System.DateTime export_date
	{
		get
		{
			return this._export_date;
		}
		set
		{
			if ((this._export_date != value))
			{
				this.Onexport_dateChanging(value);
				this.SendPropertyChanging();
				this._export_date = value;
				this.SendPropertyChanged("export_date");
				this.Onexport_dateChanged();
			}
		}
	}
	
	[Column(Storage="_export_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int export_id
	{
		get
		{
			return this._export_id;
		}
		set
		{
			if ((this._export_id != value))
			{
				this.Onexport_idChanging(value);
				this.SendPropertyChanging();
				this._export_id = value;
				this.SendPropertyChanged("export_id");
				this.Onexport_idChanged();
			}
		}
	}
	
	[Column(Storage="_export_series", DbType="VarChar(50)")]
	public string export_series
	{
		get
		{
			return this._export_series;
		}
		set
		{
			if ((this._export_series != value))
			{
				this.Onexport_seriesChanging(value);
				this.SendPropertyChanging();
				this._export_series = value;
				this.SendPropertyChanged("export_series");
				this.Onexport_seriesChanged();
			}
		}
	}
	
	[Column(Storage="_export_property", DbType="VarChar(10)")]
	public string export_property
	{
		get
		{
			return this._export_property;
		}
		set
		{
			if ((this._export_property != value))
			{
				this.Onexport_propertyChanging(value);
				this.SendPropertyChanging();
				this._export_property = value;
				this.SendPropertyChanged("export_property");
				this.Onexport_propertyChanged();
			}
		}
	}
	
	[Column(Storage="_export_level", DbType="VarChar(50)")]
	public string export_level
	{
		get
		{
			return this._export_level;
		}
		set
		{
			if ((this._export_level != value))
			{
				this.Onexport_levelChanging(value);
				this.SendPropertyChanging();
				this._export_level = value;
				this.SendPropertyChanged("export_level");
				this.Onexport_levelChanged();
			}
		}
	}
	
	[Column(Storage="_export_note", DbType="VarChar(10)")]
	public string export_note
	{
		get
		{
			return this._export_note;
		}
		set
		{
			if ((this._export_note != value))
			{
				this.Onexport_noteChanging(value);
				this.SendPropertyChanging();
				this._export_note = value;
				this.SendPropertyChanged("export_note");
				this.Onexport_noteChanged();
			}
		}
	}
	
	[Column(Storage="_export_partnum", DbType="VarChar(50)")]
	public string export_partnum
	{
		get
		{
			return this._export_partnum;
		}
		set
		{
			if ((this._export_partnum != value))
			{
				this.Onexport_partnumChanging(value);
				this.SendPropertyChanging();
				this._export_partnum = value;
				this.SendPropertyChanged("export_partnum");
				this.Onexport_partnumChanged();
			}
		}
	}
	
	[Column(Storage="_orderformproduct_id", DbType="Int")]
	public System.Nullable<int> orderformproduct_id
	{
		get
		{
			return this._orderformproduct_id;
		}
		set
		{
			if ((this._orderformproduct_id != value))
			{
				if (this._Order_Form_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onorderformproduct_idChanging(value);
				this.SendPropertyChanging();
				this._orderformproduct_id = value;
				this.SendPropertyChanged("orderformproduct_id");
				this.Onorderformproduct_idChanged();
			}
		}
	}
	
	[Association(Name="Order_Form_Product_Product_Export", Storage="_Order_Form_Product", ThisKey="orderformproduct_id", OtherKey="orderformproduct_id", IsForeignKey=true)]
	public Order_Form_Product Order_Form_Product
	{
		get
		{
			return this._Order_Form_Product.Entity;
		}
		set
		{
			Order_Form_Product previousValue = this._Order_Form_Product.Entity;
			if (((previousValue != value) 
						|| (this._Order_Form_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_Form_Product.Entity = null;
					previousValue.Product_Export.Remove(this);
				}
				this._Order_Form_Product.Entity = value;
				if ((value != null))
				{
					value.Product_Export.Add(this);
					this._orderformproduct_id = value.orderformproduct_id;
				}
				else
				{
					this._orderformproduct_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("Order_Form_Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
